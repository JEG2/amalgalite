= Amalgalite Changelog
== Version 0.7.2 - 2009-01-24
=== Enhancements

* added quoting and escaping of text support, used for database drivers
* added ability to access columns of the schame in original definition order

== Version 0.7.1 - 2009-01-18

=== Enhancements

* added support for sqlite's nexted transactions which appeared in sqlite
* update to SQLite version 3.6.10
* added ability to set the SQLite temporary directory
* added amalgalite-pack --require-order

=== Bug Fixes

* fix exception when accessing the special 'rowid' column
* fix internal require order list for use in packing

== Version 0.6.0 - 2009-01-10

=== Enhancements

* Added ability to define custom SQL functions implemented in Ruby
* Added ability to define custom SQL aggregates implemented in Ruby
* Added support for Ruby busy handlers
* Added database 'interrupt' support
* Added support for Ruby progress handlers
* update to SQLite version 3.6.7

== Version 0.5.1 - 2008-11-30

=== Enhancements

* update to SQLite version 3.6.6.2

== Version 0.5.0 - 2008-11-16

=== Enhancements

* amalgalite-pack-into-db has been reworked into amalgalite-pack
* ruby code that is packed into a database for later requiring can now be
  compressed
* update to SQLite version 3.6.5

== Version 0.4.2 - 2008-10-12

=== Enhancements

* release of windows gem

== Version 0.4.1 - 2008-09-28

=== Enhancements

* update to SQLite3 version 3.6.3
* change rdoc template to darkfish

== Version 0.4.0 - 2008-09-14

=== Enhancements
* update to SQLite3 version 3.6.2 and enable the RTree option by default
* Amalgalite::Requires module allowing ruby code to be 'required' from columns in an SQLite database
* Amagalite::Requires::Bootstrap extension module enabling low level boot
  strapping of the pure ruby Amalgalite code from an sqlite database
* more indepth information about indexes is available via the Index class
* add support for sqlite3_status and sqlite3_db_status information

=== Bugfixes

* fix nil exception when using a declared_data_type on primary key column that
  has no declared_data_type
* when Database#transaction is passed a block, the return value is the return
  value of the block
* nested transactions are 'faked'.  Calling Database#transaction while
  Databased#in_transaction? is true does not result in an exception, but
  continues on in the current transaction.  
* raise LoadError if required in the same program as sqlite3-ruby.  These
  libraries conflict with each other.

== Version 0.2.4 - 2008-07-13

===  Bugfixes
* fix compilation when ruby is compiled without pthreads using 

== Version 0.2.3 - 2008-07-12

=== Bugfixes
* make sure file permissions are all read before shipping gem

== Version 0.2.2 - 2008-07-12

=== Bugfixes
* Database#pragma should accept a block just like Database#execute does
* convert to using extconf.rb instead of mkrf to enable compilation as a
  direct ruby extension in the ruby source tree

== Version 0.2.1 - 2008-07-05

=== Bugfixes
* make sure that the pthread support in sqlite3 matches that of ruby
* fix schema reloading in the example scripts

== Version 0.2.0 - 2008-07-04

=== Enhancements
* blob support, both incremental access and normal access
* added examples/gem_db.rb script demonstrating taps and prepared statements
* added examples/schema-info.rb script demonstrating meta information
* added examples/blob.rb demonstrating incremental blob IO
* added access to the SQLite3 errcode and errmsg api

=== Bugfixes
* added taps.rb for requiring
* fixed prepared statement reset
* caught an error in executing prepared statements earlier in the process so the correct error is reported

== Version 0.1.0 - 2008-06-21

* Initial public release
